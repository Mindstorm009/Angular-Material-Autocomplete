{"version":3,"sources":["ng://@vguleaev/dynamic-autocomplete/src/app/autocomplete/abstract-value-accessor.ts","null","ng://@vguleaev/dynamic-autocomplete/src/app/autocomplete/autocomplete.component.ts","ng://@vguleaev/dynamic-autocomplete/src/app/autocomplete/autocomplete.module.ts"],"names":["_","Object","defineProperty","AbstractValueAccessor","prototype","this","_value","v","onChange","writeValue","value","registerOnChange","fn","registerOnTouched","onTouched","validate","c","Input","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","AutocompleteComponent","_this","_super","call","x","EventEmitter","placeholder","tslib_1.__extends","isAutocompleteService","service","storedItems","slice","saveReturnType","currentModel","returnType","modelChange","emit","ngOnInit","doPrefetch","prefetch","ngAfterViewInit","focusOn","setTimeout","autocompleteInput","nativeElement","focus","Error","noSuggestions","params","HttpParams","serviceParams","fetch","then","result","filterCallback","length","force","query","isQueryEmpty","autocompleteList","minChars","set","requestsInQueue","filterStoredItems","displayItem","displayItemFn","filter","item","viewItem","formatedItem","toLowerCase","indexOf","autocompleteSelected","$event","selected","option","model","optionSelected","clearAfterSearch","clearValue","autocompleteDisplayFn","onKey","keyCode","onKeyCallback","doSearchViaService","onBlur","searchButton","relatedTarget","onFocus","eval","name","formControlItem","reset","onCreateNew","createNew","object","items","Component","args","selector","template","styles","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","Output","ViewChild","DynamicAutocompleteModule","NgModule","imports","BrowserModule","FormsModule","BrowserAnimationsModule","ReactiveFormsModule","MatInputModule","MatButtonModule","MatSelectModule","MatCardModule","MatAutocompleteModule","MatIconModule","MatProgressBarModule","declarations","exports"],"mappings":"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","sourcesContent":["import { forwardRef, Input } from \"@angular/core\";\r\nimport {\r\n  ControlValueAccessor,\r\n  NG_VALUE_ACCESSOR,\r\n  NG_VALIDATORS,\r\n  FormControl,\r\n  Validator,\r\n  AbstractControl,\r\n  ValidationErrors,\r\n} from \"@angular/forms\";\r\n\r\nexport abstract class AbstractValueAccessor implements ControlValueAccessor, Validator {\r\n\r\n  @Input() disabled?: boolean = false;\r\n  @Input() required?: boolean;\r\n  @Input() placeholder?: string;\r\n  @Input() formControlItem?: FormControl;\r\n  @Input() formControlName?: string;\r\n\r\n  private _value: any = \"\";\r\n\r\n  get value(): any {\r\n    return this._value;\r\n  }\r\n  set value(v: any) {\r\n    if (v !== this._value) {\r\n      this._value = v;\r\n      this.onChange(v);\r\n    }\r\n  }\r\n\r\n  public writeValue(value: any) {\r\n    this._value = value;\r\n    // warning: comment below if only want to emit on user intervention\r\n    this.onChange(value);\r\n  }\r\n\r\n  public onChange = (_: any) => {};\r\n  public onTouched = () => {};\r\n  public registerOnChange(fn: (_: any) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n  public registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  public validate(c: AbstractControl): { [key: string]: any } | null {\r\n    return null;\r\n  }\r\n  public registerOnValidatorChange?(fn: () => void): void;\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { AfterViewInit, Component, OnInit, Input, ViewChild, ElementRef, EventEmitter, Output, TemplateRef, forwardRef } from \"@angular/core\";\r\nimport { AbstractValueAccessor } from \"./abstract-value-accessor\";\r\nimport { MatAutocomplete, MatButton } from \"@angular/material\";\r\nimport { AutocompleteService } from \"./autocomplete.service\";\r\nimport { HttpParams } from \"@angular/common/http\";\r\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"autocomplete\",\r\n  template: `<mat-form-field class=\"input-container\">\r\n  <input matInput\r\n         *ngIf=\"formControlItem && formControlName\"\r\n         [formControl]=\"formControlItem\"\r\n         [required]=\"required\"\r\n         [matAutocomplete]=\"autocomplete\"\r\n         [placeholder]=\"placeholder\"\r\n         (keyup)=\"onKey($event)\"\r\n         (focus)=\"onFocus($event)\"\r\n         (blur)=\"onBlur($event)\"\r\n         #autocompleteInput\r\n  />\r\n  <input matInput\r\n         *ngIf=\"!formControlItem && !formControlName\"\r\n         [name]=\"name\"\r\n         [disabled]=\"disabled\"\r\n         [required]=\"required\"\r\n         [matAutocomplete]=\"autocomplete\"\r\n         [placeholder]=\"placeholder\"\r\n         (keyup)=\"onKey($event)\"\r\n         (focus)=\"onFocus($event)\"\r\n         (blur)=\"onBlur($event)\"\r\n         [(ngModel)]=\"model\"\r\n         #autocompleteInput\r\n  />\r\n  <button *ngIf=\"hasSearchButton\" #searchButton mat-button matPrefix mat-icon-button aria-label=\"Search\" (click)=\"fetch(true)\" type=\"button\">\r\n      <mat-icon class=\"search-icon\">search</mat-icon>\r\n  </button>\r\n  <button *ngIf=\"model || value || query\" mat-button matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"clearValue()\" #clearButton type=\"button\">\r\n    <mat-icon class=\"clear-icon\">clear</mat-icon>\r\n  </button>\r\n  <mat-progress-bar mode=\"indeterminate\" *ngIf=\"hasProgressBar && requestsInQueue > 0\"></mat-progress-bar>\r\n  <mat-autocomplete #autocomplete=\"matAutocomplete\"\r\n                    [displayWith]=\"autocompleteDisplayFn()\"\r\n                    (optionSelected)=\"autocompleteSelected($event)\">\r\n    <mat-option *ngFor=\"let item of autocompleteList\" [value]=\"item\">\r\n      <ng-template [ngIf]=\"displayTemplate\">\r\n        <ng-container *ngTemplateOutlet=\"displayTemplate; context: {$implicit: item}\"></ng-container>\r\n      </ng-template>\r\n      <span *ngIf=\"!displayTemplate\">\r\n        {{viewItem(item)}}\r\n      </span>\r\n    </mat-option>\r\n    <mat-option *ngIf=\"query && noSuggestions\" disabled>\r\n      <span>Sorry, no suggestions were found</span>\r\n    </mat-option>\r\n    <mat-option *ngIf=\"query && noSuggestions && canCreateNew\" [value]=\"query\" (click)=\"onCreateNew()\">\r\n      <mat-icon class=\"add-icon\">add</mat-icon> <span class=\"create-new\"> {{addNewText}} </span>\r\n    </mat-option>\r\n  </mat-autocomplete>\r\n  <mat-error>\r\n    {{ validationErrors && validationErrors.length > 0 ? validationErrors[0] : ''}}\r\n  </mat-error>\r\n</mat-form-field>\r\n\r\n`,\r\n  styles: [`.input-container{width:100%}.search-icon{font-size:24px}.mat-progress-bar{position:absolute}.create-new{color:#27ae60}.add-icon{position:relative;color:#27ae60}`],\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => AutocompleteComponent),\r\n    multi: true,\r\n  }],\r\n})\r\nexport class AutocompleteComponent extends AbstractValueAccessor implements AfterViewInit, OnInit {\r\n  /**\r\n   *  How to use this component:\r\n   *\r\n   *  <autocomplete\r\n   *    placeholder=\"Search\"\r\n   *    [minChars] = \"2\"                            // start fetch items after min chars amount, default is 2\r\n   *    [source]=\"AutocompleteService | any[]\"      // source can be service or array, when array is passed filter is done local\r\n   *    [serviceParams]= \"HttpParams\"               // sets HttpParams for service fetch function\r\n   *    [doPrefetch]= \"false\"                       // when active, service do fetch items on init\r\n   *    [clearAfterSearch] =Â \"false\"                // clears input after item select\r\n   *    [hasProgressBar] =Â \"false\"                  // adds loading while making request\r\n   *    [hasSearchButton] = \"false\"                 // adds search button near input\r\n   *\r\n   *    displayItem = \"item.name\"                   // text will be evaluated and executed, better use displayItemFn for function\r\n   *    [displayTemplate] = \"TemplateRef\"           // template reference for autocomplete options, displayItem is needed for local search\r\n   *\r\n   *    [canCreateNew] =Â \"false\"                    // adds create button when no suggestions\r\n   *    [addNewText] = \"'Add new'\"                  // text to display near create button\r\n   *    (createNew) = \"onCreateNew($event)\"         // rises an event when click on create button\r\n   *\r\n   *    [filterCallback] = \"function\"               // callback function to format data from server response\r\n   *    [focusOn]=\"true\"                            // sets focus that triggers fetch\r\n   *\r\n   *    (optionSelected)=\"onSelectCallback($event)\" // get selected item from event\r\n   *\r\n   *    formControlName=\"controlName\"               // access it as any form control\r\n   *    [formControlItem]=\"form.controls['controlName']\"\r\n   *    [(ngModel)]=\"model.item\"\r\n   *\r\n   *    [(model)]=\"model.item\"                      // or just use model binding\r\n   *    (modelChange)=\"itemSelected($event)\"\r\n   *\r\n   *  ></autocomplete>\r\n   */\r\n\r\n  @Input() set source(value: AutocompleteService<any> | any[]) {\r\n    if (this.isAutocompleteService(value)) {\r\n      this.service = value as AutocompleteService<any>;\r\n    } else\r\n    if (value instanceof Array) {\r\n      this.storedItems = value.slice(0);\r\n      this.saveReturnType(this.storedItems);\r\n    }\r\n  }\r\n\r\n  // @Input() placeholder = \"\";\r\n  @Input() name = \"\";\r\n  @Input() doPrefetch = false;\r\n  @Input() displayItem: string;\r\n  @Input() hasSearchButton = false;\r\n  @Input() hasProgressBar = false;\r\n  @Input() minChars = 2;\r\n  @Input() clearAfterSearch = false;\r\n  @Input() canCreateNew = false;\r\n  @Input() addNewText = \"Add new\";\r\n  @Input() focusOn = false;\r\n  @Input() validationErrors: string[] = [];\r\n  @Input() serviceParams?: HttpParams;\r\n  @Input() displayItemFn?: (item: any) => string;\r\n  @Input() displayTemplate?: TemplateRef<any>;\r\n  @Input() filterCallback: any = (x: any[]) => x;\r\n\r\n  @Output() modelChange: EventEmitter<any> = new EventEmitter<any>();\r\n  @Output() optionSelected = new EventEmitter();\r\n  @Output() createNew = new EventEmitter();\r\n\r\n  @ViewChild(\"autocompleteInput\") autocompleteInput: ElementRef;\r\n  @ViewChild(\"searchButton\") searchButton: MatButton;\r\n  @ViewChild(\"clearButton\") clearButton: MatButton;\r\n  @ViewChild(\"autocomplete\") autocomplete: MatAutocomplete;\r\n\r\n  public currentModel: any;\r\n  public query = \"\";\r\n  public autocompleteList: any[] | null;\r\n  public request = false;\r\n  public noSuggestions: boolean;\r\n  public requestsInQueue = 0;\r\n\r\n  private storedItems?: any[];\r\n  private service?: AutocompleteService<any>;\r\n  private returnType: string;\r\n\r\n  @Input() set model(value: any) {\r\n    if (value !== this.currentModel) {\r\n      this.currentModel = value;\r\n      if (value === null || this.returnType === typeof value) {\r\n        this.modelChange.emit(value);\r\n      }\r\n    }\r\n  }\r\n  get model(): any {\r\n    return this.currentModel;\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.placeholder = this.placeholder ? this.placeholder : \"Search\";\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.doPrefetch) {\r\n      this.prefetch();\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.focusOn) {\r\n      setTimeout(() => {\r\n        this.autocompleteInput.nativeElement.focus();\r\n      });\r\n    }\r\n  }\r\n\r\n  public prefetch() {\r\n    if (!this.service) {\r\n      throw new Error(\"Service for prefetch is not defined in 'Source'\");\r\n    }\r\n\r\n    this.storedItems = [];\r\n    this.noSuggestions = false;\r\n\r\n    let params = new HttpParams();\r\n    if (this.serviceParams) {\r\n      params = this.serviceParams;\r\n    }\r\n\r\n    this.service.fetch(params).then((result: any) => {\r\n      this.storedItems = this.filterCallback(result);\r\n      this.noSuggestions = result.length === 0;\r\n      this.saveReturnType(this.storedItems);\r\n    });\r\n  }\r\n\r\n  public fetch(force?: boolean) {\r\n    if (!this.service) {\r\n      throw new Error(\"Service for fetch is not defined in 'Source'\");\r\n    }\r\n\r\n    this.query = this.autocompleteInput.nativeElement.value;\r\n\r\n    // empty query is not allowed for autocomplete\r\n    if (this.isQueryEmpty(this.query)) {\r\n      this.autocompleteList = [];\r\n      return;\r\n    }\r\n\r\n    if (force || this.query.length >= this.minChars) {\r\n      let params = new HttpParams();\r\n      params = params.set(\"query\", this.query);\r\n      if (this.serviceParams) {\r\n        params = this.serviceParams.set(\"query\", this.query);\r\n      }\r\n\r\n      this.noSuggestions = false;\r\n      this.requestsInQueue = this.requestsInQueue + 1;\r\n\r\n      this.service.fetch(params)\r\n        .then((result: any) => {\r\n          this.requestsInQueue = this.requestsInQueue - 1;\r\n          this.autocompleteList = this.filterCallback(result);\r\n          this.noSuggestions = result.length === 0;\r\n          this.saveReturnType(this.autocompleteList);\r\n        });\r\n    }\r\n  }\r\n\r\n  public filterStoredItems() {\r\n    if (!this.displayItem && !this.displayItemFn) {\r\n      throw new Error(\"You must provide displayItem or displayItemFn for local search.\");\r\n    }\r\n\r\n    this.query = this.autocompleteInput.nativeElement.value;\r\n    if (this.query.length < this.minChars) {\r\n      return;\r\n    }\r\n\r\n    if (this.storedItems) {\r\n\r\n      this.autocompleteList = this.storedItems.filter(item => {\r\n        if (!this.viewItem(item)) {\r\n          throw new Error(\"String to evaluate in displayItem was provided wrong. Better use displayItemFn\");\r\n        }\r\n\r\n        let formatedItem = this.viewItem(item).toLowerCase();\r\n        if (this.displayItemFn) {\r\n          formatedItem = this.displayItemFn(item).toLowerCase();\r\n        }\r\n        return formatedItem.indexOf(this.query.toLowerCase()) > -1;\r\n      });\r\n      this.noSuggestions = this.query.length > 0 && this.autocompleteList.length === 0;\r\n\r\n    } else {\r\n      this.autocompleteList = [];\r\n      this.noSuggestions = false;\r\n    }\r\n  }\r\n\r\n  public autocompleteSelected($event: any) {\r\n    this.query = this.autocompleteInput.nativeElement.value;\r\n    const selected = $event.option.value;\r\n\r\n    this.value = selected;\r\n    this.model = selected;\r\n\r\n    if (selected) {\r\n      this.optionSelected.emit(selected);\r\n    }\r\n\r\n    if (this.clearAfterSearch) {\r\n      this.clearValue();\r\n    }\r\n  }\r\n\r\n  public autocompleteDisplayFn() {\r\n    if (this.displayItemFn) {\r\n      return this.displayItemFn;\r\n    }\r\n\r\n    return (item: any) => {\r\n      return item ? this.viewItem(item) : item;\r\n    };\r\n  }\r\n\r\n  public onKey($event: KeyboardEvent) {\r\n    // prevent filtering results if arrow were pressed\r\n    if ($event.keyCode < 37 || $event.keyCode > 40) {\r\n      if (this.autocompleteInput.nativeElement.value === \"\") {\r\n        this.clearValue();\r\n      }\r\n      this.onKeyCallback();\r\n    }\r\n  }\r\n\r\n  public onKeyCallback() {\r\n    if (this.doSearchViaService) {\r\n      this.fetch();\r\n    } else {\r\n      this.filterStoredItems();\r\n    }\r\n  }\r\n\r\n  public onBlur($event: MouseEvent) {\r\n    if (this.searchButton && this.autocompleteInput.nativeElement.value === \"\"\r\n      && $event.relatedTarget !== this.searchButton[\"_elementRef\"].nativeElement) {\r\n      this.autocompleteInput.nativeElement.value = this.model ? this.viewItem(this.model) : \"\";\r\n    }\r\n  }\r\n\r\n  public onFocus($event: any) {\r\n    if (this.doSearchViaService) {\r\n      this.fetch();\r\n    } else {\r\n      this.filterStoredItems();\r\n    }\r\n  }\r\n\r\n  public viewItem(item: any) {\r\n    if (this.displayItemFn) {\r\n      return this.displayItemFn(item);\r\n    }\r\n    // using eval() can be dangerous, better use displayItemFn function\r\n    return this.displayItem ? eval(this.displayItem) : item.name;\r\n  }\r\n\r\n  public clearValue() {\r\n    if (this.formControlItem) {\r\n      this.formControlItem.reset();\r\n    }\r\n    this.model = null;\r\n    this.value = \"\";\r\n  }\r\n\r\n  get doSearchViaService() {\r\n    // check if search result returns from service or from local data\r\n    // if prefetch is active only one request will be made on init\r\n    return this.service && !this.doPrefetch;\r\n  }\r\n\r\n  public onCreateNew() {\r\n    if (this.model) {\r\n      const value = this.returnType === typeof this.model ? this.viewItem(this.model) : this.model;\r\n      this.autocompleteInput.nativeElement.value = value;\r\n    }\r\n\r\n    this.createNew.emit(this.model);\r\n  }\r\n\r\n  private isQueryEmpty(query: string): boolean {\r\n    return query.length <= 0;\r\n  }\r\n\r\n  private isAutocompleteService(object: any): object is AutocompleteService<any> {\r\n    return object && \"fetch\" in object;\r\n  }\r\n\r\n  private saveReturnType(items: any[] | undefined | null) {\r\n    if (items && items.length > 0) {\r\n      this.returnType = typeof items[0];\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatProgressBarModule, MatButtonModule, MatIconModule, MatInputModule, MatAutocompleteModule, MatSelectModule, MatCardModule } from '@angular/material';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AutocompleteComponent } from './autocomplete.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatCardModule,\r\n    MatAutocompleteModule,\r\n    MatIconModule,\r\n    MatProgressBarModule\r\n  ],\r\n  declarations: [AutocompleteComponent],\r\n  exports: [AutocompleteComponent]\r\n})\r\nexport class DynamicAutocompleteModule { }\r\n"]}